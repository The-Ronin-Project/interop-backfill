[versions]
dbrider = "1.39.0"
idea-ext = "1.1.7"
interop-common = "3.12.0"
interop-gradle = "3.2.0"
# @pin until Spring Boot 3
jakarta = "2.0.2"
kotlinx-coroutines = "1.7.3"
ktor = "2.3.4"
ktorm = "3.6.0"
liquibase = "4.23.2"
# @pin until Spring 6
logstash = "7.3"
mockk = "1.13.8"
mysql = "8.0.33"
openapi-generator = "7.0.1"
# @pin until can move to JDK 17
spring-boot = "2.7.13"
springdoc = "1.7.0"
testcontainers = "1.19.0"

[libraries]
interop-common = { module = "com.projectronin.interop:interop-common", version.ref = "interop-common" }
interop-commonHttp = { module = "com.projectronin.interop:interop-common-http", version.ref = "interop-common" }
interop-commonJackson = { module = "com.projectronin.interop:interop-common-jackson", version.ref = "interop-common" }
interop-commonKtorm = { module = "com.projectronin.interop:interop-common-ktorm", version.ref = "interop-common" }
interop-commonTestDb = { module = "com.projectronin.interop:interop-common-test-db", version.ref = "interop-common" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktorm-core = { module = "org.ktorm:ktorm-core", version.ref = "ktorm" }
ktorm-support-mysql = { module = "org.ktorm:ktorm-support-mysql", version.ref = "ktorm" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
# @keep Wants to throw this out during upgrades for some reason.
rider-core = { module = "com.github.database-rider:rider-core", version.ref = "dbrider" }
spring-boot-parent = { module = "org.springframework.boot:spring-boot-parent", version.ref = "spring-boot" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "springdoc" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }

[bundles]
ktor = [
    "ktor-client-auth",
    "ktor-client-cio",
]

[plugins]
idea-ext = { id = "org.jetbrains.gradle.plugin.idea-ext", version.ref = "idea-ext" }
interop-gradle-docker-integration = { id = "com.projectronin.interop.gradle.docker-integration", version.ref = "interop-gradle" }
interop-gradle-junit = { id = "com.projectronin.interop.gradle.junit", version.ref = "interop-gradle" }
interop-gradle-server-version = { id = "com.projectronin.interop.gradle.server-version", version.ref = "interop-gradle" }
interop-gradle-spring-boot = { id = "com.projectronin.interop.gradle.spring-boot", version.ref = "interop-gradle" }
interop-gradle-spring-framework = { id = "com.projectronin.interop.gradle.spring", version.ref = "interop-gradle" }
interop-gradle-version-catalog = { id = "com.projectronin.interop.gradle.version-catalog-update", version.ref = "interop-gradle" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
